@startuml
interface EventHandler{}
package java.util {
        interface Iterable<EtapeIG,PointDeControleIG,ArcIG> {
          Iterator<EtapeIG> iterator()
        }

    }
package twisk{

    package twisk.mondeIG {
       class ActiviteIG
       class MondeIG
       class EtapeIG
       class GestionnaireSuccesseursIG
       class GuichetIG
       class PointDeControleIG
    }
    package twisk.monde {
       class Activite
       class Monde
       class Etape
       class GestionnaireSuccesseurs
       class GestionnaireEtapes
       class Guichet
       class ActiviteRestreinte
       class SasEntree
       class SasSortie
    }

    package twisk.outils {

        class TailleComposants {
        TailleComposants instance
        int getLargeurFenetre()
        int getHauteurFenetre()
        int getLargeurEtape()
        int getLargeurZoneClient()
        }

        class FabriqueIdentifiant {
            int noEtape
            String getIdentifiantEtape()
            void reset()
        }
        class ClassLoaderPerso{
            ClassLoaderPerso(ClassLoader parent)
            Class<?> loadClass(String name) throws ClassNotFoundException
        }
        class CorrespondanceEtapes{
            CorrespondanceEtapes()
            void ajouter(EtapeIG etig, Etape et)
            Etape get (EtapeIG e)
        }
        class FabriqueNumero{
            int cptEtape
            int cptSemaphore
            FabriqueNumero()
            int getNumeroEtape()
            int getNumeroSemaphore()
            void reset()
        }
        class FabriqueSimulation{
            FabriqueSimulation()
            int getNoSimulation()
            void reset()
        }
        class KitC{
            Runtime runtime
            int noSimulation
            KitC()
            void copier(InputStream source, File dest) throws IOException
            void creerEnvironnement()
            void creerFichier(String codeC)
            void compiler()
            void construireLaLibrairie()
            int getNumeroSimulation()
        }
    }
        FabriqueIdentifiant -- "1" FabriqueIdentifiant : static
        TailleComposants -- "1" TailleComposants : static
        FabriqueNumero -- "1" FabriqueNumero : static
        FabriqueSimulation -- "1" FabriqueSimulation : static
        CorrespondanceEtapes "1" -- MondeIG
        CorrespondanceEtapes -- "*" Etape
        CorrespondanceEtapes -- "*" EtapeIG

    package twisk.exceptions{
        class ArcException{
        }
        class MondeException{
        }
        class TimeException{
        }
        class TwiskException{
        }
    }

    class Exception {
    }


    package twisk.vues {

        interface Observateur {
        void reagir()
        }

        abstract VueEtapeIG extends VBox implements Observateur{
            Label label
            VueEtapeIG(MondeIG monde, EtapeIG etape)
        }
        class VueGuichetIG extends VueEtapeIG implements Observateur{
            VueGuichetIG(MondeIG monde, GuichetIG guichet)
            void reagir()
        }


        class VueActiviteIG extends VueEtapeIG implements Observateur {
            VueActiviteIG(MondeIG monde, EtapeIG etape)
            void reagir()
        }

        class VueMondeIG implements Observateur {
            VueMondeIG(MondeIG monde)
            void reagir()
        }
        class VueOutils implements Observateur {
            private Button ajouterActivite;
            private Button ajouterGuichet;
            private Button playSim;
            VueOutils(MondeIG monde)
            void reagir()
        }

        class VueArcIG extends Pane implements Observateur{
            private Polyline pl;
            private Line ligne;
            VueArcIG(MondeIG monde, ArcIG arc)
            void reagir()
        }


        class VuePointDeControleIG extends Circle implements Observateur {
            VuePointDeControleIG(MondeIG monde, PointDeControleIG point)
            void reagir()
        }
        class EcouteurPDC implements EventHandler{
                EcouteurPDC (MondeIG monde, PointDeControleIG point)
                void handle(MouseEvent mouseEvent)
        }
        class SujetObserve{
                ArrayList<Observateur> obs
                void ajouterObservateur(Observateur v)
                void notifierObservateurs()
        }
        class VueChangerEcartTemps extends TextInputDialog{
            VueChangerEcartTemps(MondeIG monde)
            void handle(DialogEvent dialogEvent)
            void setEtapeAChanger(EtapeIG etapeAChanger)
        }
        class VueChangerNbJetons  extends TextInputDialog{
            VueChangerNbJetons(MondeIG monde)
            void handle(DialogEvent dialogEvent)
            void setEtapeAChanger(EtapeIG etapeAChanger)
        }
        class VueChangerTemps extends TextInputDialog{
            VueChangerTemps(MondeIG monde)
            void handle(DialogEvent dialogEvent)
            void setEtapeAChanger(EtapeIG etapeAChanger)
        }
       class VueMenu extends MenuBar implements Observateur{
            private String style;
            VueMenu(MondeIG monde)
            void reagir()
        }
        class VueRenommerEtape extends TextInputDialog {
            VueRenommerEtape(MondeIG monde)
            void setEtapeARenom(EtapeIG etapeARenom)
        }

    }
    EcouteurPDC -- "1" MondeIG
    EcouteurPDC -- "1" PointDeControleIG
    SujetObserve -- "*" Observateur
    VueArcIG -- "1" ArcIG
    VueArcIG --"1" MondeIG
    VueChangerEcartTemps -- "1" MondeIG
    VueChangerEcartTemps --"1" ActiviteIG
    VueChangerNbJetons -- "1" MondeIG
    VueChangerNbJetons -- "1" GuichetIG
    VueChangerTemps -- "1" MondeIG
    VueChangerTemps -- "1" ActiviteIG
    VueEtapeIG -- "1" MondeIG
    VueEtapeIG -- "1" EtapeIG
    VueEtapeIG -- "1" Label
    VueEtapeIG --|> VBox
    VueGuichetIG --|> VueEtapeIG
    VueMenu --|> MenuBar
    VueMenu -- "1" MondeIG
    VueMenu -- "1" VueRenommerEtape
    VueMenu -- "1" VueChangerTemps
    VueMenu -- "1" VueChangerEcartTemps
    VueMenu -- "1" VueChangerNbJetons
    VueMondeIG --|> Pane
    VueMondeIG -- "1" MondeIG
    VueOutils --|> TilePane
    VueOutils -- "1" MondeIG
    VueEtapeIG - "1" EtapeIG
    VuePointDeControleIG --|> Circle
    VueRenommerEtape --|> TextInputDialog
    VueChangerNbJetons --|> TextInputDialog
    VueChangerEcartTemps --|> TextInputDialog
    VueChangerTemps --|> TextInputDialog



/' A POURSUIVRE LE DIAGRAMME
    package twisk.mondeIG {


        class MondeIG implements Iterable{
        MondeIG()
        void ajouter (String type)
        void ajouter(PointDeControleIG pt1, PointDeControleIG pt2)
        void effacerSelect()
        HashMap<String, EtapeIG> getHash()
        int getNbEtapesSelect()
        int getSize()
        Iterator<EtapeIG> iterator()
        Iterable<ArcIG> iteratorArc()
        void positionEtapes(int dragEventX, int dragEventY, EtapeIG etp)
        void renommerEtape(String nom)
        void selectEntree()
        void selectionArcs(ArcIG arc)
        void selectionEtapes(EtapeIG etape)
        void selectionPoint(PointDeControleIG point)
        void selectSortie()
        void setEcart(int ecartTemps)
        oid setTemps(int temps)
        void supprimerArcs()
        void supprimerEtapes()
        void ajouter(String type)
        void ajouterObservateur(Observateur v)
        }

        abstract class EtapeIG implements Iterable {
        String nom
        String identifiant
        int posX
        int posY
        int largeur
        int hauteur
        ArrayList <PointDeControleIG> pcList;
        int selected
        int estUneEntree

        EtapeIG(String nom, String idf, int larg, int haut)
        }

        class ActiviteIG {
        ActiviteIG(String nom, String idf, int larg, int haut, int ecartTemps,int temps)
        Iterator<PointDeControleIG> iterator()
        String getNom()
        String getId()
        int getTemps()
        int getEcartTemps()
        int getPosX()
        int getPosY()
        int getLarg()
        int getHaut()
        void etapeSelect()
        void etapeDeSelect()
        int getSelected()
        void setPosX(int posX)
        void setPosY(int posY
        ArrayList <PointDeControleIG> getPoint()
        void setEstUneEntree(int estUneEntree)
        int getEstUneEntree()
        }
        class PointDeControleIG {
        int posX
        int posY
        String id
        PointDeControleIG (double posX, double posY, String id, EtapeIG etape)
        double getPosX()
        double getPosY()
        String getId()
        String getNomEtape()
        Double getTaille()
        void setX(double posX)
        void setY(double posY)
        }

        class ArcIG {
        PointDeControleIG point1;
        PointDeControleIG point2;
        public ArcIG(PointDeControleIG point1, PointDeControleIG point2)
        PointDeControleIG getPoint1()
        PointDeControleIG getPoint2()
        void setSelected ()
        void setDeSelect()
        int getSelected()
        }
    }
    SujetObserve "1"-right "*" Observateur
    Exception <|-down- TwiskException
    MondeIG --"*" EtapeIG
    MondeIG --"*" ArcIG
    SujetObserve <|-down- MondeIG
    EtapeIG <|-down- ActiviteIG
    EtapeIG "1"--"*" PointDeControleIG
    '/
}
@enduml